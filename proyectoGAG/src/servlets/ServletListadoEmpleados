@Override
	public List<Empleado> obtenerEmpleados(List<String> valueDeCadaSelect) {
		conectar();
		List<Empleado> empleados = new ArrayList<Empleado>();
		
		PreparedStatement ps;
		try {
			ps = miConexion.prepareStatement(SQLDinamicas.sqlCompetencias(valueDeCadaSelect));
			for (int i = 1; i <= valueDeCadaSelect.size(); i++) {
				ps.setString( i , valueDeCadaSelect.get(i-1));				
			}			
			ResultSet resultado =ps.executeQuery();
			
			while(resultado.next()){
				Empleado empleado = new Empleado();
				empleado.setNombre(resultado.getString("nombre"));
				empleado.setApellidos(resultado.getString("apellidos"));
				empleado.setComentario(resultado.getString("comentario"));
				empleado.setIdProyecto(resultado.getInt("id_proyecto"));
				empleado.setId(resultado.getInt("id"));
				empleados.add(empleado);
				}
			} catch (SQLException e) {
			System.out.println("error sql listar");
			System.out.println(e.getMessage());
		}
		desconectar();
		return empleados;
	}//end obtenerEmpleados
